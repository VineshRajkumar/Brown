{"version":3,"file":"index-CxcT9f4T.js","sources":["../../src/lib/utils.js","../../src/components/ui/button.jsx","../../src/components/Header/Header.jsx","../../src/components/Footer/Footer.jsx","../../src/components/container/Container.jsx","../../src/conf/conf.js","../../src/appwrite/auth.js","../../src/features/auth/authSlice.js","../../src/components/Header/LogoutBtn.jsx","../../src/components/ui/progress.jsx","../../src/components/AuthLayout.jsx","../../src/components/RTE.jsx","../../src/store/store.js","../../src/Layout.jsx","../../src/appwrite/config.js","../../src/components/ui/card.jsx","../../src/components/ui/input.jsx","../../src/components/ui/label.jsx","../../src/components/ui/login-form.jsx","../../src/app/login/page.jsx","../../src/components/ui/signup-form.jsx","../../src/app/sign-up/page.jsx","../../src/components/ui/select.jsx","../../src/components/post-form/PostForm.jsx","../../src/app/post-page/page.jsx","../../src/appwrite/adminOptions.js","../../src/app/dashboard/page.jsx","../../src/app/edit-post/page.jsx","../../src/app/post/page.jsx","../../src/app/home/page.jsx","../../src/app/not-found/page.jsx","../../src/main.jsx"],"sourcesContent":["import { clsx } from \"clsx\";\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs) {\r\n  return twMerge(clsx(inputs));\r\n}\r\n","import * as React from \"react\"\r\nimport { Slot } from \"@radix-ui/react-slot\"\r\nimport { cva } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-[color,box-shadow] disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40\",\r\n        outline:\r\n          \"border border-input bg-background shadow-xs hover:bg-accent hover:text-accent-foreground\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n)\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}) {\r\n  const Comp = asChild ? Slot : \"button\"\r\n\r\n  return (\r\n    (<Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants }\r\n","import React from \"react\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container, LogoutBtn } from \"../index\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaRegPenToSquare } from \"react-icons/fa6\";\r\n\r\nconst Header = () => {\r\n  //check session once here\r\n  const session = useSelector((state) => state.status);\r\n  // console.log(session)\r\n  const navigate = useNavigate();\r\n  const navItems = [\r\n    {\r\n      name: \"Our Story\",\r\n      slug: \"/Brown\",\r\n    },\r\n    {\r\n      name: \"Membership\",\r\n      slug: \"/Brown\",\r\n    },\r\n    {\r\n      name: \"Write\",\r\n      slug: \"/Brown/post\",\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <nav className=\"p-4  border-1 border-b-black bg-[#f7f4ed] \">\r\n          <div className=\"container mx-auto flex flex-row justify-between items-center\">\r\n            <Link\r\n              to=\"/Brown\"\r\n              className=\"text-4xl font-extrabold font-cormorant-garamond \"\r\n            >\r\n              Brown\r\n            </Link>\r\n\r\n            {session ? (\r\n              <div className=\"flex justify-evenly gap-x-6 px-9 cursor-pointer\">\r\n                <div className=\"flex flex-row items-center gap-x-2\">\r\n                  <Link\r\n                    to=\"/Brown/dashboard\"\r\n                    className=\"my-auto font-roboto text-sm max-[547px]:hidden\"\r\n                  >\r\n                    <Button className=\"  font-roboto text-sm font-medium  \">\r\n                      Dashboard\r\n                    </Button>\r\n                  </Link>\r\n                  <Link\r\n                    to=\"/Brown/post\"\r\n                    className=\"my-auto font-roboto text-sm max-[547px]:hidden\"\r\n                  >\r\n                    <Button className=\"font-roboto text-sm font-medium  \">\r\n                      <FaRegPenToSquare />\r\n                      Write\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n\r\n                <LogoutBtn />\r\n              </div>\r\n            ) : (\r\n              <>\r\n                <div className=\"flex justify-evenly gap-x-6 px-9 cursor-pointer\">\r\n                  {navItems.map((item) => (\r\n                    <div\r\n                      key={item.name}\r\n                      className=\"my-auto font-roboto text-sm max-[725px]:hidden\"\r\n                    >\r\n                      <div\r\n                        //you can also use Link\r\n                        // navigate here is used just\r\n                        //for teaching purposes\r\n                        onClick={() => navigate(item.slug)}\r\n                      >\r\n                        {item.name}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <Link\r\n                    to=\"/Brown/login\"\r\n                    className=\"my-auto font-roboto text-sm max-[547px]:hidden\"\r\n                  >\r\n                    Sign in\r\n                  </Link>\r\n                  <Link to=\"/Brown/sign-up\">\r\n                    <Button className=\" rounded-3xl font-roboto text-sm font-medium  \">\r\n                      Get started\r\n                    </Button>\r\n                  </Link>\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n        </nav>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst Footer = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const navItems = [\r\n    {\r\n      name: \"Help\",\r\n      slug: \"/Brown/help\",\r\n      \r\n      class: \"\"\r\n    },\r\n    {\r\n      name: \"Status\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n    {\r\n      name: \"About\",\r\n      slug: \"/Brown/about\",\r\n     \r\n      class: \"\"\r\n    },\r\n    {\r\n      name: \"Carrer\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n    {\r\n      name: \"Press\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n    {\r\n      name: \"Blog\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n    {\r\n      name: \"Privacy\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"\"\r\n    },\r\n    {\r\n      name: \"Terms\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"\"\r\n    },\r\n    {\r\n      name: \"Text To Speech\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n    {\r\n      name: \"Teams\",\r\n      slug: \"/Brown\",\r\n      \r\n      class: \"max-[903px]:hidden\"\r\n    },\r\n  ];\r\n  return (\r\n    <div>\r\n      <div\r\n        className=\"p-4  border-1 border-black bg-[#f7f4ed] max-[903px]:bg-black max-[903px]:text-white \"\r\n      >\r\n        <div className=\"container  flex flex-row justify-center items-center max-[903px]:justify-start   \">\r\n          <div className=\"flex justify-evenly gap-x-6 px-9 \">\r\n            \r\n            {navItems.map((item)=>(\r\n              \r\n                <div key={item.name} className={item.class}>\r\n                  <div \r\n                  className={`my-auto font-roboto text-xs font-medium cursor-pointer `} \r\n                  onClick={()=>navigate(item.slug)}\r\n                  >\r\n                    {item.name}\r\n                  </div>\r\n                </div>\r\n              \r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react'\r\n\r\nconst Container = ({children}) => {\r\n  return (\r\n    <div className=\"bg-[#f7f4ed]\">\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Container\r\n","const conf = {\r\n    appwriteUrl: String(import.meta.env.VITE_APPWRITE_URL),\r\n    appwriteProjectId: String(import.meta.env.VITE_APPWRITE_PROJECT_ID),\r\n    appwriteDatabaseId: String(import.meta.env.VITE_APPWRITE_DATABASE_ID),\r\n    appwriteCollectionId: String(import.meta.env.VITE_APPWRITE_COLLECTION_ID),\r\n    appwriteBucketId: String(import.meta.env.VITE_APPWRITE_BUCKET_ID),\r\n    appwriteApiKey: String(import.meta.env.VITE_APPWRITE_API_KEY),\r\n    tinymceApiKey: String(import.meta.env.VITE_TINY_MCE_API_KEY)\r\n}\r\n\r\nexport default conf","import conf from \"../conf/conf.js\";\r\nimport { Client, Account, ID } from \"appwrite\";\r\n\r\n\r\n//This is same code as from documentation \r\n//just we are writing it like this for better\r\n//code practises so that if in future we change \r\n//our backend as service platform then we have \r\n//just make some changes in this file\r\nexport class AuthService{\r\n    client = new Client();\r\n    account;\r\n\r\n    constructor(){\r\n        this.client\r\n            .setEndpoint(conf.appwriteUrl)\r\n            .setProject(conf.appwriteProjectId)\r\n        this.account = new Account(this.client)\r\n    }\r\n\r\n    async createAccount({email,password,name}){\r\n        try {\r\n            const userAccount = await this.account.create(ID.unique(),email,password,name)\r\n            if(userAccount){\r\n                //account created then proceed to login\r\n                return this.login({email,password})\r\n            }\r\n            else return userAccount\r\n\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: createAccount :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n\r\n    async login({email,password}){\r\n        try {\r\n            return await this.account.createEmailPasswordSession(email,password)\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: login :: error\" )\r\n            return {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };\r\n        }\r\n    }\r\n\r\n    async getCurrentUser(){\r\n        try {\r\n            return await this.account.get()\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: getCurrentUser :: error\")\r\n            \r\n        }\r\n        return  {\r\n            success: false,\r\n            message: error?.message,\r\n            type: error?.type || \"unknown_error\",\r\n            code: error?.code || 500\r\n          };\r\n    }\r\n    \r\n\r\n    async logout(){\r\n        try {\r\n            //logouts from all devices/browsers\r\n            await this.account.deleteSessions();\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: logout :: error\",error)\r\n    \r\n        }\r\n    }\r\n}\r\n\r\nconst authService = new AuthService();\r\n/*instead of exporting the class for which \r\neach time we would have had to write AuthService \r\nlike that we directly export the authService \r\nobject so it would be easy to acess the variable \r\ninside it\r\n*/\r\nexport default authService;\r\n","//Refer to the reduxToolkitTodo folder \r\n// or 14_redux_toolkit_crash_course.md \r\n// file for explainations as here we \r\n// are doing the same as that but \r\n// modifying this store for autherication \r\n\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    status: false,\r\n    userData: null\r\n}\r\n\r\nconst authSlice = createSlice({\r\n    name: 'auth',\r\n    initialState,\r\n    reducers: {\r\n        login: (state,action) =>{\r\n            if(!action.payload || !action.payload.userData){\r\n                console.log(\"login: Invalid action payload\", action.payload);\r\n                return;\r\n            }\r\n            //if loggedin set it true\r\n            state.status = true;\r\n            state.userData = action.payload.userData\r\n        },\r\n        logout: (state,action) =>{\r\n            state.status = false\r\n            state.userData = null\r\n        }\r\n    }\r\n})\r\n\r\nexport const {login,logout} = authSlice.actions;\r\n\r\nexport default authSlice.reducer ","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authService from \"@/appwrite/auth\";\r\nimport { logout as authLogout } from \"@/features/auth/authSlice\";\r\nimport { Button } from \"../ui/button\";\r\n\r\n\r\nconst LogoutBtn = () => {\r\n    const dispatch = useDispatch()\r\n    const logoutHandler = () => {\r\n        //calling method logout for appwrite \r\n        //handle appwrite with promises\r\n        authService.logout()\r\n        .then(()=>{\r\n            //dispath here will update the state \r\n            //as false \r\n            \r\n            const check = dispatch(authLogout())\r\n            // console.log(check)\r\n        })\r\n        .catch((error)=>(console.log(\"Error Logging Out User LogoutBtn.jsx :: LogoutBtn :: error\", error) ))\r\n    }\r\n  return (\r\n    <>\r\n      <div className=\"flex flex-row gap-x-4\">\r\n        <Button \r\n        className=\"rounded-3xl font-roboto text-sm font-medium \"\r\n        onClick = {logoutHandler}\r\n        >\r\n          Logout\r\n        </Button>\r\n\r\n        <img\r\n          className=\"w-10 h-10 rounded-full\"\r\n          src=\"https://flowbite.com/docs/images/people/profile-picture-5.jpg\"\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LogoutBtn;\r\n","import * as React from \"react\"\r\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Progress({\r\n  className,\r\n  value,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<ProgressPrimitive.Root\r\n      data-slot=\"progress\"\r\n      className={cn(\r\n        \"bg-primary/20 relative h-2 w-full overflow-hidden rounded-full\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <ProgressPrimitive.Indicator\r\n        data-slot=\"progress-indicator\"\r\n        className=\"bg-primary h-full w-full flex-1 transition-all\"\r\n        style={{ transform: `translateX(-${100 - (value || 0)}%)` }} />\r\n    </ProgressPrimitive.Root>)\r\n  );\r\n}\r\n\r\nexport { Progress }\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Progress } from \"./ui/progress\";\r\n\r\nconst Protected = ({ children, authentication = true }) => {\r\n  const navigate = useNavigate();\r\n  const [loader, setloader] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n  const authStatus = useSelector((state) => state.status);\r\n\r\n  //basically this useeffect is protect the application\r\n  //so that unautheicated users cannot use application\r\n  useEffect(() => {\r\n    /*Basically this is written here\r\n        in little bit complex way :-\r\n        if(authStatus===true) navigate('/')\r\n        else if(authStatus===false) navigate('/login')\r\n        */\r\n    /*\r\n       CASE 1 :- \r\n       If authentication = T and authStatus = F \r\n       T !== F so go to /login \r\n       \r\n       CASE 2 :-\r\n       If authentication = F and authStatus = T \r\n       F !== T so go to /dashboard\r\n\r\n       BASICALLY WE ARE FOLLOWING AUTHSTATUS HERE \r\n       authentication variable is just added so that there are \r\n       no mismatches when opened in seperate tab \r\n       */\r\n    if (authentication && authStatus !== authentication) {\r\n      navigate(\"/Brown/login\");\r\n    } else if (!authentication && authStatus !== authentication) {\r\n      navigate(\"/Brown/dashboard\");\r\n    }\r\n\r\n    //  -------------------------\r\n    //LOADER LOGIC :-\r\n    // Gradually increase progress\r\n    let interval = setInterval(() => {\r\n      //get the previous progress value\r\n      //if greater than 100 retun 100 or else\r\n      //increment by 10\r\n      //loader will stop automatically at 100\r\n      //so it will not come here in setInterval\r\n\r\n      /*\r\n        NOTE :- settimeout time should at 10 times \r\n        the setinterval time as it will increase \r\n        in amout of 10 so if setineterval time \r\n        is 200 then settimeout time should be \r\n        at 2000 so that loader can complete \r\n\r\n        HERE IN OUR CASE LOADER IS JUST FOR UI \r\n        SINCE NO TYPE OF DATABASE CALL IS BEING MADE \r\n        WE ARE JUST MAKING THE USER WAIT FOR UI \r\n        JUST MAKING HIM SEE THE LOADER IF WE \r\n        WANT WE COULD ALSO DIRECTLY MAKE SETLODER AS FALSE\r\n         */\r\n\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress >= 100) {\r\n          clearInterval(interval);\r\n          return 100;\r\n        }\r\n        return oldProgress + 10; // Increase by 10 every 100ms\r\n      });\r\n    }, 100);\r\n\r\n    // Set loading false after 1 second\r\n    setTimeout(() => {\r\n      clearInterval(interval);\r\n      setloader(false);\r\n    }, 1000);\r\n\r\n    /*clearInterval(interval) stops the interval \r\n    when the USEeffect is cleaned up. \r\n    so that setInterval doenot keep running even \r\n    after the useEffect is done*/\r\n    return () => clearInterval(interval);\r\n    //  -------------------------\r\n  }, [authStatus, navigate, authentication]);\r\n\r\n  return loader ? (\r\n    <div>\r\n      <Progress value={progress} />\r\n      <div className=\"flex flex-col items-center justify-center min-h-[83vh] bg-black text-white\">\r\n        <div className=\"relative w-16 h-16 border-4 border-gray-500 border-t-white rounded-full animate-spin\"></div>\r\n        <p className=\"mt-4 text-lg font-medium\">Please wait...</p>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <> {children} </>\r\n  );\r\n};\r\n\r\nexport default Protected;\r\n","import React from 'react'\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport { Controller } from 'react-hook-form';\r\nimport conf from '@/conf/conf';\r\nimport { useEffect } from 'react';\r\nconst RTE = ({\r\n    name,\r\n    //Here \"control\" will passed as a \r\n    // reference for some other page \r\n    // to use this form \r\n    //This is propety from react hook form\r\n    control,\r\n    label,\r\n    defaultValue = \"\"\r\n}) => {\r\n\r\n  return (\r\n    <div>\r\n       <div className='w-full'>\r\n        {label && <label className='inline-block mb-1 pl-1'>{label}</label>}\r\n       </div>\r\n       <Controller\r\n       name={name}\r\n       control={control} //control is passed here just \r\n       // like forward ref so that its parent element \r\n       // can take control fo this component\r\n\r\n       //render this component again whenever \r\n       // some kind of change happens here\r\n       render={({field : {onChange}}) => (\r\n        <Editor\r\n        apiKey={conf.tinymceApiKey}\r\n        initialValue={defaultValue}\r\n        init={{\r\n          height: 500,\r\n          menubar: true,\r\n          plugins: [\r\n            'advlist autolink lists link image charmap print preview anchor',\r\n            'searchreplace visualblocks code fullscreen',\r\n            'insertdatetime media table paste code help wordcount'\r\n          ],\r\n          toolbar: 'undo redo | formatselect | ' +\r\n          'bold italic backcolor | alignleft aligncenter ' +\r\n          'alignright alignjustify | bullist numlist outdent indent | ' +\r\n          'removeformat | help',\r\n          content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n        }}\r\n        onEditorChange={onChange}\r\n      />\r\n       )} \r\n       />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RTE\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport reducer from '@/features/auth/authSlice';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: reducer\r\n})\r\n\r\nexport default store;","import React from \"react\";\r\nimport { Header, Footer } from \"./components\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport authService from \"./appwrite/auth\";\r\nimport { login, logout } from \"./features/auth/authSlice\";\r\nimport { Progress } from \"./components/ui/progress\";\r\nimport RTE from \"./components/RTE\";\r\n\r\nconst Layout = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [progress, setProgress] = useState(0);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    authService\r\n      .getCurrentUser()\r\n      .then((userData) => {\r\n        if (userData) return dispatch(login({ userData: userData }));\r\n        else return dispatch(logout());\r\n      })\r\n      .catch((error) => console.log(\"Error fetching user:\", error));\r\n\r\n    //  -------------------------\r\n    //LOADER LOGIC :-\r\n    // Gradually increase progress\r\n    let interval = setInterval(() => {\r\n      //get the previous progress value\r\n      //if greater than 100 retun 100 or else\r\n      //increment by 10\r\n      //loader will stop automatically at 100\r\n      //so it will not come here in setInterval\r\n\r\n      /*\r\n        NOTE :- settimeout time should at 10 times \r\n        the setinterval time as it will increase \r\n        in amout of 10 so if setineterval time \r\n        is 200 then settimeout time should be \r\n        at 2000 so that loader can complete \r\n\r\n        HERE IN OUR CASE LOADER IS JUST FOR UI \r\n        SINCE NO TYPE OF DATABASE CALL IS BEING MADE \r\n        WE ARE JUST MAKING THE USER WAIT FOR UI \r\n        JUST MAKING HIM SEE THE LOADER IF WE \r\n        WANT WE COULD ALSO DIRECTLY MAKE SETLODER AS FALSE\r\n         */\r\n      setProgress((oldProgress) => {\r\n        if (oldProgress >= 100) {\r\n          clearInterval(interval);\r\n          return 100;\r\n        }\r\n        return oldProgress + 10; // Increase by 10 every 100ms\r\n      });\r\n    }, 200);\r\n\r\n    // Set loading false after 1 second\r\n    setTimeout(() => {\r\n      clearInterval(interval);\r\n      setLoading(false);\r\n    }, 2000);\r\n\r\n    /*clearInterval(interval) stops the interval \r\n    when the USEeffect is cleaned up. \r\n    so that setInterval doenot keep running even \r\n    after the useEffect is done*/\r\n    return () => clearInterval(interval);\r\n    //  -------------------------\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <div>\r\n      <Progress value={progress} />\r\n      <div className=\"flex flex-col items-center justify-center min-h-screen bg-black text-white\">\r\n        <div className=\"relative w-16 h-16 border-4 border-gray-500 border-t-white rounded-full animate-spin\"></div>\r\n        <p className=\"mt-4 text-lg font-medium\">Please wait...</p>\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <>\r\n      {/* <Header/>\r\n      <Outlet/>\r\n      <Footer/> */}\r\n      <div className=\"layout min-h-screen flex flex-col\">\r\n        <Header />\r\n        <main className=\"content flex-grow\">\r\n          <Outlet />\r\n        </main>\r\n        <Footer className=\"mt-auto\" />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import conf from \"../conf/conf.js\";\r\nimport { Client, Account, ID, Databases, Storage, Query } from \"appwrite\";\r\n\r\nexport class Service{\r\n    client = new Client();\r\n    databases;\r\n    bucket;\r\n\r\n    constructor(){\r\n        this.client\r\n            .setEndpoint(conf.appwriteUrl)\r\n            .setProject(conf.appwriteProjectId);\r\n\r\n        this.databases = new Databases(this.client);\r\n        this.bucket = new Storage(this.client)\r\n    }\r\n\r\n    async createPost({title,slug,content,featuredImage,status,userId}){\r\n        try {\r\n            return await this.databases.createDocument(\r\n                conf.appwriteDatabaseId,\r\n                conf.appwriteCollectionId,\r\n                slug,\r\n                {\r\n                    title,\r\n                    content,\r\n                    featuredImage,\r\n                    status,\r\n                    userId\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: createPost :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n\r\n    async updatePost(slug,{title,content,featuredImage,status}){\r\n        try {\r\n            return await this.databases.updateDocument(\r\n                conf.appwriteDatabaseId,\r\n                conf.appwriteCollectionId,\r\n                slug,\r\n                {\r\n                    title,\r\n                    content,\r\n                    featuredImage,\r\n                    status\r\n                }\r\n            )\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: updatePost :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n    async deletePost(slug){\r\n        try {\r\n            await this.databases.deleteDocument(\r\n                conf.appwriteDatabaseId,\r\n                conf.appwriteCollectionId,\r\n                slug\r\n            )\r\n            return true;\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: deletePost :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message ||false,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n            \r\n        }\r\n    }\r\n    async getPost(slug){\r\n        try {\r\n            return await this.databases.getDocument(\r\n                conf.appwriteDatabaseId,\r\n                conf.appwriteCollectionId,\r\n                slug\r\n            )\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: getPost :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n    //Query can only be used if you have \r\n    //made indexs/keys for it in appwrite database\r\n    async getPosts(queries = [Query.equal(\"status\",\"active\")]){\r\n        try {\r\n            //you can also give additional \r\n            //parameter like how many results \r\n            //to display in each page called as \r\n            //pagination \r\n            return await this.databases.getDocument(\r\n                conf.appwriteDatabaseId,\r\n                conf.appwriteCollectionId,\r\n                queries\r\n\r\n            )\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: getPosts :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n\r\n    //file upload method \r\n    async uploadFile(file){\r\n        try {\r\n            return await this.bucket.createFile(\r\n                conf.appwriteBucketId,\r\n                ID.unique(),\r\n                file\r\n            )\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: uploadFile :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n        }\r\n    }\r\n    async deleteFile(fileId){\r\n        try {\r\n            await this.bucket.deleteFile(\r\n                conf.appwriteBucketId,\r\n                fileId\r\n            )\r\n            return true;\r\n        } catch (error) {\r\n            console.log(\"Appwrite service :: deleteFile :: error\")\r\n            return  {\r\n                success: false,\r\n                message: error?.message||false,\r\n                type: error?.type || \"unknown_error\",\r\n                code: error?.code || 500\r\n              };   \r\n            \r\n        }\r\n    }\r\n    getFilePreview(fileId){\r\n        return this.bucket.getFilePreview(\r\n            conf.appwriteBucketId,\r\n            fileId\r\n        )\r\n    }\r\n}\r\n\r\nconst serviceObj = new Service();\r\n/*instead of exporting the class for which \r\neach time we would have had to write Service \r\nlike that we directly export the service \r\nobject so it would be easy to acess the variable \r\ninside it\r\n*/\r\nexport default serviceObj;","import * as React from \"react\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nimport { Link } from \"react-router-dom\";\r\nimport serviceObj from \"@/appwrite/config\";\r\n\r\n\r\n\r\nfunction Card({\r\n  $id,\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n     $id ? (\r\n      <Link\r\n        to={`/Brown/post/${$id}`}\r\n        data-slot=\"card\"\r\n        className={cn(\r\n          \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    ) : (\r\n      <div \r\n        data-slot=\"card\"\r\n        className={cn(\r\n          \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm \",\r\n          className\r\n        )}\r\n        {...props}\r\n      />\r\n    )\r\n   \r\n  );\r\n}\r\n\r\nfunction CardHeader({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-header\"\r\n      className={cn(\"flex flex-col gap-1.5 px-6\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardTitle({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-title\"\r\n      className={cn(\"leading-none font-semibold\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardImage({\r\n  className,\r\n  featuredImage=\"\",\r\n  ...props\r\n}) {\r\n  return (\r\n    (<img\r\n      src={serviceObj.getFilePreview(featuredImage)}\r\n      alt=\"Image Here\"\r\n      data-slot=\"card-image\"\r\n      className={cn(\"\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardDescription({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-description\"\r\n      className={cn(\"text-muted-foreground text-sm\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction CardContent({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (<div data-slot=\"card-content\" className={cn(\"px-6\", className)} {...props} />);\r\n}\r\n\r\nfunction CardFooter({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<div\r\n      data-slot=\"card-footer\"\r\n      className={cn(\"flex items-center px-6\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Card, CardHeader, CardFooter, CardTitle, CardImage, CardDescription, CardContent }\r\n","//SINCE THIS WAS MADE WITH REACT 19 SO IT IGNORED SOME THING IN REACT HOOK FORM AS REACT 19 WAS NOT FULLY READY FOR REACT HOOK FORM \r\n//REACT HOOK FORM WAS ONLY WORKING FOR REACT 18 \r\n//BECAUSE OF WHICH THIS WAS WORKING BUT WHEN I CHANGED IT TO REACT 18 THIS BROKE AS REF + FORWARD REF  WAS NOT GIVEN \r\n//\r\n// import * as React from \"react\"\r\n// import { cn } from \"@/lib/utils\"\r\n\r\n// function Input({\r\n//   className,\r\n//   type,\r\n//   ...props\r\n// }) {\r\n//   return (\r\n//     (<input\r\n//       type={type}\r\n//       data-slot=\"input\"\r\n//       className={cn(\r\n//         \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n//         \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n//         \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n//         className\r\n//       )}\r\n//       {...props} />)\r\n//   );\r\n// }\r\n\r\n// export { Input }\r\n\r\nimport * as React from \"react\"\r\nimport { forwardRef } from \"react\";\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Input = forwardRef(({\r\n  className,\r\n  type,\r\n  ...props\r\n},ref)=> {\r\n  return (\r\n    (<input\r\n      type={type}\r\n      ref={ref}\r\n      data-slot=\"input\"\r\n      className={cn(\r\n        \"border-input file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\r\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\r\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n})\r\n\r\nInput.displayName = \"Input\"; \r\n\r\nexport { Input };\r\n","import * as React from \"react\"\r\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\r\n\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nfunction Label({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<LabelPrimitive.Root\r\n      data-slot=\"label\"\r\n      className={cn(\r\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\r\n        className\r\n      )}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nexport { Label }\r\n","import { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nimport React, { useState , useRef } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport serviceObj from \"@/appwrite/config\";\r\nimport { login as authLogin } from \"@/features/auth/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport authService from \"@/appwrite/auth\";\r\nimport { Toaster, toast } from 'sonner'\r\n\r\nexport function LoginForm({ className, ...props }) {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const emailRef = useRef(null);\r\n  const passwordRef = useRef(null);\r\n\r\n  //register and handleSubmit are main in\r\n  //react hook form\r\n  const { register, handleSubmit } = useForm();\r\n  const [error, setError] = useState({});\r\n\r\n  const loginSubmit = async (data) => {\r\n    setError({});\r\n    try {\r\n      // console.log(\"Submitting login data:\", data);\r\n      //data will be an object with {email,password}\r\n      const session = await authService.login(data);\r\n      // console.log(session)\r\n      if (session.success != false) {\r\n        const userData = await authService.getCurrentUser();\r\n        //once user is logged in change the login state\r\n        //in the store to true by calling the login method\r\n\r\n        if (userData) {\r\n          dispatch(authLogin({userData: userData}));\r\n          toast.success(\"Login successful!\")\r\n        }\r\n        navigate(\"/Brown/dashboard\");\r\n      } else throw session;\r\n    } catch (error) {\r\n      const errorObj = {\r\n        message: error?.message || \"An unknown error occurred\",\r\n        type: error?.type || \"unknown_error\",\r\n        code: error?.code || 500,\r\n      };\r\n      toast.error(`${errorObj.message}`)\r\n      setError(errorObj);\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n      <Card>\r\n        <CardHeader className=\"text-center\">\r\n          <CardTitle className=\"text-xl\">Welcome back</CardTitle>\r\n          <CardDescription>\r\n            Login To Start Reading !!\r\n          </CardDescription>\r\n        </CardHeader>\r\n        <CardContent>\r\n          {/* <form> */}\r\n          <div className=\"grid gap-6\">\r\n            <div className=\"flex flex-col gap-4\">\r\n              <Button variant=\"outline\" className=\"w-full\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    d=\"M12.152 6.896c-.948 0-2.415-1.078-3.96-1.04-2.04.027-3.91 1.183-4.961 3.014-2.117 3.675-.546 9.103 1.519 12.09 1.013 1.454 2.208 3.09 3.792 3.039 1.52-.065 2.09-.987 3.935-.987 1.831 0 2.35.987 3.96.948 1.637-.026 2.676-1.48 3.676-2.948 1.156-1.688 1.636-3.325 1.662-3.415-.039-.013-3.182-1.221-3.22-4.857-.026-3.04 2.48-4.494 2.597-4.559-1.429-2.09-3.623-2.324-4.39-2.376-2-.156-3.675 1.09-4.61 1.09zM15.53 3.83c.843-1.012 1.4-2.427 1.245-3.83-1.207.052-2.662.805-3.532 1.818-.78.896-1.454 2.338-1.273 3.714 1.338.104 2.715-.688 3.559-1.701\"\r\n                    fill=\"currentColor\"\r\n                  />\r\n                </svg>\r\n                Login with Apple\r\n              </Button>\r\n              <Button variant=\"outline\" className=\"w-full\">\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n                  <path\r\n                    d=\"M12.48 10.92v3.28h7.84c-.24 1.84-.853 3.187-1.787 4.133-1.147 1.147-2.933 2.4-6.053 2.4-4.827 0-8.6-3.893-8.6-8.72s3.773-8.72 8.6-8.72c2.6 0 4.507 1.027 5.907 2.347l2.307-2.307C18.747 1.44 16.133 0 12.48 0 5.867 0 .307 5.387.307 12s5.56 12 12.173 12c3.573 0 6.267-1.173 8.373-3.36 2.16-2.16 2.84-5.213 2.84-7.667 0-.76-.053-1.467-.173-2.053H12.48z\"\r\n                    fill=\"currentColor\"\r\n                  />\r\n                </svg>\r\n                Login with Google\r\n              </Button>\r\n            </div>\r\n            <div className=\"after:border-border relative text-center text-sm after:absolute after:inset-0 after:top-1/2 after:z-0 after:flex after:items-center after:border-t\">\r\n              <span className=\"bg-background text-muted-foreground relative z-10 px-2\">\r\n                Or continue with\r\n              </span>\r\n            </div>\r\n            <form onSubmit={handleSubmit(loginSubmit)}>\r\n              <div className=\"grid gap-6\">\r\n                {/* EMAIL */}\r\n                <div className=\"grid gap-3\">\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input\r\n                  // ref={emailRef}\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"m@example.com\"\r\n                    {...register(\"email\", {\r\n                      required: true,\r\n                      validate: {\r\n                        matchPattern: (value) =>\r\n                          /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n                            value\r\n                          ) || \"Email address must be a valid address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                </div>\r\n\r\n                {/* PASSWORD  */}\r\n                <div className=\"grid gap-3\">\r\n                  <div className=\"flex items-center\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"ml-auto text-sm underline-offset-4 hover:underline\"\r\n                    >\r\n                      Forgot your password?\r\n                    </a>\r\n                  </div>\r\n                  <Input\r\n                  // ref={passwordRef}\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    {...register(\"password\", {\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                </div>\r\n\r\n                {/* LOGIN BUTTON  */}\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                  Login\r\n                </Button>\r\n                <Toaster richColors position=\"top-right\" />\r\n              </div>\r\n            </form>\r\n\r\n            <div className=\"text-center text-sm\">\r\n              Don&apos;t have an account?{\" \"}\r\n              <Link to=\"/Brown/sign-up\" className=\"underline underline-offset-4\">\r\n                Sign up\r\n              </Link>\r\n            </div>\r\n          </div>\r\n          {/* </form> */}\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"text-muted-foreground *:[a]:hover:text-primary text-center text-xs text-balance *:[a]:underline *:[a]:underline-offset-4\">\r\n        By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\r\n        and <a href=\"#\">Privacy Policy</a>.\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoginForm } from \"@/components/ui/login-form\"\r\n\r\nexport default function LoginPage() {\r\n  return (\r\n    (<div\r\n      className=\"bg-[#f7f4ed] flex min-h-svh flex-col items-center justify-center gap-6 p-6 md:p-10\">\r\n      <div className=\"flex w-full max-w-sm flex-col gap-6\">\r\n          {/* <Link \r\n          to=\"/\"\r\n          className=\"text-4xl font-extrabold font-cormorant-garamond flex items-center gap-2 self-center \"\r\n            >\r\n              Join Brown\r\n            </Link> */}\r\n        \r\n        <LoginForm />\r\n      </div>\r\n    </div>)\r\n  );\r\n}\r\n","import { cn } from \"@/lib/utils\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  CardDescription,\r\n  CardHeader,\r\n  CardTitle,\r\n} from \"@/components/ui/card\";\r\nimport { Input } from \"@/components/ui/input\";\r\nimport { Label } from \"@/components/ui/label\";\r\n\r\nimport React, { useState } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport serviceObj from \"@/appwrite/config\";\r\nimport { login as authLogin } from \"@/features/auth/authSlice\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport authService from \"@/appwrite/auth\";\r\nimport { Toaster, toast } from 'sonner'\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport function SignUpForm({ className, ...props }) {\r\n    const session = useSelector((state) => state.status);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  //register and handleSubmit are main in\r\n  //react hook form\r\n  const { register, handleSubmit } = useForm();\r\n  const [error, setError] = useState({});\r\n\r\n  const create = async (data) => {\r\n    setError({});\r\n    try {\r\n      //data will be an object with {email,password}\r\n      const userData = await authService.createAccount(data);\r\n      if (userData.success != false) {\r\n        const currData = await authService.getCurrentUser();\r\n        //once user is logged in change the login state\r\n        //in the store to true by calling the login method\r\n\r\n        if (currData) {\r\n          dispatch(authLogin({userData:currData}));\r\n          // console.log(session)\r\n          toast.success(\"Account Created Successfully !\")\r\n        }\r\n        setTimeout(() => {\r\n            navigate(\"/Brown\");\r\n       }, 3000);\r\n        \r\n      } \r\n      else throw userData;\r\n    } catch (error) {\r\n      const errorObj = {\r\n        message: error?.message || \"An unknown error occurred\",\r\n        type: error?.type || \"unknown_error\",\r\n        code: error?.code || 500,\r\n      };\r\n      toast.error(`${errorObj.message}`)\r\n      setError(errorObj);\r\n      \r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cn(\"flex flex-col gap-6\", className)} {...props}>\r\n      <Card>\r\n        \r\n        <CardContent>\r\n          {/* <form> */}\r\n          <div className=\"grid gap-6\">\r\n            <form onSubmit={handleSubmit(create)}>\r\n              <div className=\"grid gap-6\">\r\n                {/* USERNAME */}\r\n              <div className=\"grid gap-3\">\r\n                  <Label htmlFor=\"username\">Username</Label>\r\n                  <Input\r\n                    placeholder=\"username\"\r\n                    {...register(\"name\", {\r\n                      required: true\r\n                    })}\r\n                  />\r\n                </div>\r\n\r\n                {/* EMAIL */}\r\n                <div className=\"grid gap-3\">\r\n                  <Label htmlFor=\"email\">Email</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"m@example.com\"\r\n                    {...register(\"email\", {\r\n                      required: true,\r\n                      validate: {\r\n                        matchPatern: (value) =>\r\n                          /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,3})+$/.test(\r\n                            value\r\n                          ) || \"Email address must be a valid address\",\r\n                      },\r\n                    })}\r\n                  />\r\n                </div>\r\n\r\n                {/* PASSWORD  */}\r\n                <div className=\"grid gap-3\">\r\n                  <div className=\"flex items-center\">\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                  </div>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    {...register(\"password\", {\r\n                      required: true,\r\n                    })}\r\n                  />\r\n                </div>\r\n\r\n                {/* LOGIN BUTTON  */}\r\n                <Button type=\"submit\" className=\"w-full\">\r\n                  SignUp\r\n                </Button>\r\n                <Toaster richColors position=\"top-right\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n          {/* </form> */}\r\n        </CardContent>\r\n      </Card>\r\n      <div className=\"text-muted-foreground *:[a]:hover:text-primary text-center text-xs text-balance *:[a]:underline *:[a]:underline-offset-4\">\r\n        By clicking continue, you agree to our <a href=\"#\">Terms of Service</a>{\" \"}\r\n        and <a href=\"#\">Privacy Policy</a>.\r\n      </div>\r\n    </div>\r\n  );\r\n}","import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport { LoginForm } from \"@/components/ui/login-form\"\r\nimport { SignUpForm } from \"@/components/ui/signup-form\";\r\n\r\nexport default function SignUpPage() {\r\n  return (\r\n    (<div\r\n      className=\"bg-[#f7f4ed] flex min-h-svh flex-col items-center justify-center gap-6 p-6 md:p-10\">\r\n      <div className=\"flex w-full max-w-sm flex-col gap-6\">\r\n          <Link \r\n          to=\"/Brown\"\r\n          className=\"text-4xl font-extrabold font-cormorant-garamond flex items-center gap-2 self-center \"\r\n            >\r\n              Join Brown\r\n            </Link>\r\n        \r\n        <SignUpForm/>\r\n      </div>\r\n    </div>)\r\n  );\r\n}","import * as React from \"react\"\r\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\r\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\r\nimport { forwardRef } from \"react\";\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nconst Select = forwardRef(({ children, ...props }, ref) => {\r\n  return (\r\n    <SelectPrimitive.Root {...props}>\r\n      <SelectPrimitive.Trigger ref={ref} data-slot=\"select\">\r\n        {children}\r\n      </SelectPrimitive.Trigger>\r\n    </SelectPrimitive.Root>\r\n  );\r\n});\r\n\r\nfunction SelectGroup({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />;\r\n}\r\n\r\nfunction SelectValue({\r\n  ...props\r\n}) {\r\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />;\r\n}\r\n\r\nfunction SelectTrigger({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.Trigger\r\n      data-slot=\"select-trigger\"\r\n      className={cn(\r\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive flex h-9 w-full items-center justify-between rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      {children}\r\n      <SelectPrimitive.Icon asChild>\r\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\r\n      </SelectPrimitive.Icon>\r\n    </SelectPrimitive.Trigger>)\r\n  );\r\n}\r\n\r\nfunction SelectContent({\r\n  className,\r\n  children,\r\n  position = \"popper\",\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.Portal>\r\n      <SelectPrimitive.Content\r\n        data-slot=\"select-content\"\r\n        className={cn(\r\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border shadow-md\",\r\n          position === \"popper\" &&\r\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\r\n          className\r\n        )}\r\n        position={position}\r\n        {...props}>\r\n        <SelectScrollUpButton />\r\n        <SelectPrimitive.Viewport\r\n          className={cn(\"p-1\", position === \"popper\" &&\r\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\")}>\r\n          {children}\r\n        </SelectPrimitive.Viewport>\r\n        <SelectScrollDownButton />\r\n      </SelectPrimitive.Content>\r\n    </SelectPrimitive.Portal>)\r\n  );\r\n}\r\n\r\nfunction SelectLabel({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.Label\r\n      data-slot=\"select-label\"\r\n      className={cn(\"px-2 py-1.5 text-sm font-medium\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction SelectItem({\r\n  className,\r\n  children,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.Item\r\n      data-slot=\"select-item\"\r\n      className={cn(\r\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\r\n        className\r\n      )}\r\n      {...props}>\r\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\r\n        <SelectPrimitive.ItemIndicator>\r\n          <CheckIcon className=\"size-4\" />\r\n        </SelectPrimitive.ItemIndicator>\r\n      </span>\r\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\r\n    </SelectPrimitive.Item>)\r\n  );\r\n}\r\n\r\nfunction SelectSeparator({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.Separator\r\n      data-slot=\"select-separator\"\r\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\r\n      {...props} />)\r\n  );\r\n}\r\n\r\nfunction SelectScrollUpButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.ScrollUpButton\r\n      data-slot=\"select-scroll-up-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronUpIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollUpButton>)\r\n  );\r\n}\r\n\r\nfunction SelectScrollDownButton({\r\n  className,\r\n  ...props\r\n}) {\r\n  return (\r\n    (<SelectPrimitive.ScrollDownButton\r\n      data-slot=\"select-scroll-down-button\"\r\n      className={cn(\"flex cursor-default items-center justify-center py-1\", className)}\r\n      {...props}>\r\n      <ChevronDownIcon className=\"size-4\" />\r\n    </SelectPrimitive.ScrollDownButton>)\r\n  );\r\n}\r\n\r\nexport {\r\n  Select,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectItem,\r\n  SelectLabel,\r\n  SelectScrollDownButton,\r\n  SelectScrollUpButton,\r\n  SelectSeparator,\r\n  SelectTrigger,\r\n  SelectValue,\r\n}\r\n","import React from \"react\";\r\nimport { useCallback } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Button } from \"../ui/button\";\r\nimport { Input } from \"../ui/input\";\r\nimport { Select } from \"../ui/select\";\r\n// import { Select } from \"../Select\";\r\nimport { Controller } from \"react-hook-form\";\r\nimport {\r\n  SelectTrigger,\r\n  SelectValue,\r\n  SelectContent,\r\n  SelectGroup,\r\n  SelectLabel,\r\n  SelectItem,\r\n} from \"../ui/select\";\r\n\r\nimport { RTE } from \"..\";\r\nimport serviceObj from \"@/appwrite/config\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { data, useNavigate } from \"react-router-dom\";\r\nimport { Toaster, toast } from \"sonner\";\r\nimport { useEffect } from \"react\";\r\nconst PostForm = ({ post }) => {\r\n  const { register, handleSubmit, watch, setValue, control, getValues } =\r\n    useForm({\r\n      defaultValues: {\r\n        title: post?.title || \"\",\r\n        slug: post?.slug || \"\",\r\n        content: post?.content || \"\",\r\n        status: post?.status || \"active\",\r\n      },\r\n    });\r\n\r\n  const navigate = useNavigate();\r\n  const userData = useSelector((state) => state.userData);\r\n\r\n  //For PostCreation/Updation\r\n  const submit = async (data) => {\r\n    try {\r\n      if (!data) {\r\n        throw new Error(\"Data not found \");\r\n      }\r\n      // console.log(data)\r\n\r\n      if (post) {\r\n        const file = data.image?.[0]\r\n          ? await serviceObj.uploadFile(data.image[0])\r\n          : null;\r\n        //deleting the old image for the new image to replace it\r\n        // console.log(file)\r\n        if (!file) {\r\n          throw new Error(\r\n            \"Error : Please Upload the New Image OR Reupload the same image\"\r\n          );\r\n        }\r\n        // console.log(post.featuredImage)\r\n        const delFile = await serviceObj.deleteFile(post.featuredImage);\r\n        if (delFile !== true) {\r\n          throw new Error(\"Error : Old Image was not Deleted\");\r\n        }\r\n\r\n        //To update the new image in appwrite\r\n        const dbPost = await serviceObj.updatePost(post.$id, {\r\n          ...data,\r\n          featuredImage: file ? file.$id : null,\r\n        });\r\n        if (!dbPost) {\r\n          throw new Error(\"Failed to update the post. Please try again.\");\r\n        }\r\n\r\n        toast.success(\"Post Updated Successfully !\");\r\n\r\n        setTimeout(() => {\r\n          navigate(`/Brown/post/${dbPost.$id}`);\r\n        }, 3000);\r\n      } else {\r\n        //If post not found then userwants to create new post\r\n        const file = await serviceObj.uploadFile(data.image[0]);\r\n\r\n        if (!file) {\r\n          throw new Error(\"Error : File is not Uploaded\");\r\n        }\r\n        // console.log(file)\r\n        const fileId = file.$id;\r\n        // console.log(fileId)\r\n        if (!fileId) {\r\n          throw new Error(\"Error : File Id not Received\");\r\n        }\r\n\r\n        //once id is received from the new image uploaded\r\n        //update that in the object data that we are\r\n        //going to send to create the post\r\n        data.featuredImage = fileId;\r\n\r\n        //since id will not be given\r\n        //with data object so add it\r\n        //seperetly while sending data\r\n        // console.log(\"USERID\",userData.$id)\r\n        const newpost = await serviceObj.createPost({\r\n          ...data,\r\n          userId: userData.$id,\r\n        });\r\n        // console.log(newpost)\r\n\r\n        if (!newpost.$id) {\r\n          throw new Error(newpost.message);\r\n        }\r\n\r\n        toast.success(\"Post Created Successfully !\");\r\n        // console.log(newpost)\r\n        setTimeout(() => {\r\n          navigate(`/Brown/post/${newpost?.$id}`);\r\n        }, 3000);\r\n      }\r\n    } catch (error) {\r\n      const errorObj = {\r\n        message: error?.message || \"An unknown error occurred\",\r\n        type: error?.type || \"unknown_error\",\r\n        code: error?.code || 500,\r\n      };\r\n      toast.error(`${errorObj.message}`);\r\n    }\r\n  };\r\n\r\n  const slugTranform = useCallback((value) => {\r\n    try {\r\n      if (value && typeof value === \"string\") {\r\n        const slug = value\r\n          .toLowerCase()\r\n          .replace(/[^a-z0-9\\s-]/g, \"\") // Remove special characters\r\n          .replace(/\\s+/g, \"-\") // Replace spaces with \"-\"\r\n          .replace(/-+/g, \"-\"); // Remove multiple dashes\r\n\r\n        if (!slug) {\r\n          throw new Error(\r\n            \"Slug generation failed. Please provide a valid input.\"\r\n          );\r\n        }\r\n        return slug;\r\n      }\r\n    } catch (error) {\r\n      const errorObj = {\r\n        message: error?.message || \"An unknown error occurred\",\r\n        type: error?.type || \"unknown_error\",\r\n        code: error?.code || 500,\r\n      };\r\n      toast.error(`${errorObj.message}`);\r\n    }\r\n  }, []);\r\n\r\n  //How to change slug as user enters at realtime\r\n  //This is how watch from reactHook Form should be used\r\n  //Senior SDE level Interview Q also\r\n  //LITTLE BIT COMPLEX :-\r\n  React.useEffect(() => {\r\n    const subscription = watch((value, { name }) => {\r\n      //value is an object here\r\n      //name will be the label like Title\r\n      //since slug will only be made for title\r\n      //so in name only title will be passed\r\n      if (name === \"title\") {\r\n        //setValue alredy contains title,slug,control,status\r\n        //tell the setValue that we need to put this\r\n        //slug value to slug\r\n        //Use the slugTranform method pass the title\r\n        // to it from value object given\r\n        //shouldValidate is like regex it will\r\n        //check if slug is coming correctly\r\n        // with '-' instead of space\r\n        setValue(\"slug\", slugTranform(value.title, { shouldValidate: true }));\r\n      }\r\n    });\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit(submit)} className=\"flex flex-wrap\">\r\n        <div className=\"w-2/3 px-2\">\r\n          <Input\r\n            label=\"Title :\"\r\n            placeholder=\"Title\"\r\n            className=\"mb-4\"\r\n            {...register(\"title\", { required: true })}\r\n          />\r\n          <Input\r\n            label=\"Slug :\"\r\n            placeholder=\"Slug\"\r\n            className=\"mb-4\"\r\n            {...register(\"slug\", { required: true })}\r\n            onInput={(e) => {\r\n              setValue(\"slug\", slugTranform(e.currentTarget.value), {\r\n                shouldValidate: true,\r\n              });\r\n            }}\r\n          />\r\n          <RTE\r\n            label=\"Content :\"\r\n            name=\"content\"\r\n            control={control}\r\n            defaultValue={getValues(\"content\")}\r\n          />\r\n        </div>\r\n        <div className=\"w-1/3 px-2\">\r\n          <Input\r\n            label=\"Featured Image :\"\r\n            type=\"file\"\r\n            className=\"mb-4\"\r\n            accept=\"image/png, image/jpg, image/jpeg, image/gif\"\r\n            {...register(\"image\", { required: !post })}\r\n          />\r\n          {post && (\r\n            <div className=\"w-full mb-4\">\r\n              <img\r\n                src={serviceObj.getFilePreview(post.featuredImage)}\r\n                alt={post.title}\r\n                className=\"rounded-lg\"\r\n              />\r\n            </div>\r\n          )}\r\n          <Controller\r\n            name=\"status\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            rules={{ required: \"Status is required\" }}\r\n            render={({ field }) => (\r\n              <Select onValueChange={field.onChange} defaultValue={field.value}>\r\n                <SelectTrigger className=\"w-[180px]\">\r\n                  <SelectValue placeholder=\"Select the Status\" />\r\n                </SelectTrigger>\r\n                <SelectContent>\r\n                  <SelectGroup>\r\n                    <SelectLabel>Status</SelectLabel>\r\n                    <SelectItem value=\"active\">Active</SelectItem>\r\n                    <SelectItem value=\"inactive\">Inactive</SelectItem>\r\n                  </SelectGroup>\r\n                </SelectContent>\r\n              </Select>\r\n            )}\r\n          />\r\n          {/* <Select\r\n            options={[\"active\", \"inactive\"]}\r\n            label=\"Status\"\r\n            className=\"mb-4\"\r\n            {...register(\"status\", { required: true })}\r\n          /> */}\r\n          <Button\r\n            type=\"submit\"\r\n            // bgColor={post ? \"bg-green-500\" : undefined}\r\n            className={`w-full mt-4 ${post ? \"bg-green-500\" : \"\"}`}\r\n          >\r\n            {post ? \"Update\" : \"Submit\"}\r\n          </Button>\r\n        </div>\r\n      </form>\r\n      <Toaster richColors position=\"top-right\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","import { GalleryVerticalEnd } from \"lucide-react\"\r\nimport { Link } from \"react-router-dom\";\r\nimport PostForm from \"@/components/post-form/PostForm\";\r\n\r\nexport default function PostPage() {\r\n  return (\r\n    (<div\r\n      className=\"bg-[#f7f4ed] flex min-h-svh flex-col items-center justify-center gap-6 p-6 md:p-10\">\r\n      <div className=\"flex w-full max-w-6xl flex-col gap-6\">\r\n        <PostForm/>\r\n      </div>\r\n    </div>)\r\n  );\r\n}\r\n","import conf from \"../conf/conf.js\";\r\nimport { Client, Users } from \"node-appwrite\";\r\n\r\n//APPWRITES API KEY HAS BEEN USED FOR ADMIN RELATED OPTIONS \r\nexport class AdminOptions {\r\n  adminClient = new Client();\r\n  users;\r\n\r\n  constructor() {\r\n    this.adminClient\r\n      .setEndpoint(conf.appwriteUrl)\r\n      .setProject(conf.appwriteProjectId)\r\n      .setKey(conf.appwriteApiKey);\r\n    this.users = new Users(this.adminClient);\r\n  }\r\n\r\n  async getUserfromUserID(userId) {\r\n    try {\r\n      return await this.users.get(userId);\r\n    } catch (error) {\r\n      console.log(\"Appwrite service :: getUserfromUserID:: error\");\r\n    }\r\n    return {\r\n      success: false,\r\n      message: error?.message,\r\n      type: error?.type || \"unknown_error\",\r\n      code: error?.code || 500,\r\n    };\r\n  }\r\n}\r\n\r\nconst adminOptions = new AdminOptions();\r\n\r\nexport default adminOptions;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container } from \"@/components\";\r\nimport { Card, CardImage, CardTitle } from \"@/components/ui/card\";\r\nimport serviceObj from \"@/appwrite/config\";\r\nimport { FaRegComment } from \"react-icons/fa\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { data, Link } from \"react-router-dom\";\r\nimport parse from \"html-react-parser\";\r\nimport { renderToStaticMarkup } from \"react-dom/server\";\r\nimport adminOptions from \"@/appwrite/adminOptions\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Dashboard = () => {\r\n  const session = useSelector((state) => state.status);\r\n  const navigate = useNavigate();\r\n  const [posts, setPosts] = useState([]);\r\n  const [username, setUsername] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (session == true) {\r\n      serviceObj.getPosts([]).then((posts) => {\r\n        if (posts) {\r\n          // console.log(posts);\r\n          setPosts(posts.documents);\r\n\r\n          //LOGIC FOR GETTING USERNAME\r\n          const userIds = posts.documents.map((post) => post.userId);\r\n          const usernameObject = {};\r\n          //OBJECT WILL BE IN KEY : VALUE PAIR LIKE -> userId : username\r\n          //HERE WE CANT USE FORLOOP DIRECTLY TO PUT THE USERNAME\r\n          //THIS IS BECAUSE EACH USERNAME WILL BE IN A PROMISE\r\n          //AND ALL THESE USERNAMES TOGETHER AGAIN WILL BE IN PROMISE\r\n          //SO PROMISE.ALL WILL WAIT FOR EACH PROMISE TO GET RESOLOVED THEN\r\n          //ONLY GOES TO NEXT PROMISE\r\n          Promise.all(\r\n            userIds.map((id) =>\r\n              adminOptions\r\n                .getUserfromUserID(id)\r\n                .then((data) => ({ userId: id, userName: data.name }))\r\n            )\r\n          ).then((data) => {\r\n            data.forEach(({ userId, userName }) => {\r\n              usernameObject[userId] = userName;\r\n            });\r\n            //if setUsername is written out of promise then it will require another reder\r\n            //for values to go inside it\r\n            // console.log(usernameObject)\r\n            setUsername(usernameObject);\r\n          });\r\n        }\r\n      });\r\n    }\r\n    else{\r\n      navigate(`/Brown/login`);\r\n    }\r\n  }, [session,navigate]);\r\n\r\n  //For converting REACT JSX ELEMENT TO TEXT BY USING THE renderToStaticMarkup\r\n  const convertReactElementToText = (postcontentElement) => {\r\n    if (postcontentElement) {\r\n      const output = document.createElement(\"div\");\r\n      const reactElement = parse(postcontentElement);\r\n      const staticElement = renderToStaticMarkup(reactElement);\r\n      output.innerHTML = staticElement;\r\n      // console.log(output.innerText);\r\n      return output.innerText;\r\n    }\r\n    return \"\";\r\n  };\r\n\r\n  return (\r\n    (session==true) ? (\r\n    <div className=\"flex flex-col items-center p-6\">\r\n      <div className=\"w-full max-w-5xl flex flex-col md:flex-row gap-6\">\r\n        {/* Main Content */}\r\n        <div className=\"flex-1\">\r\n          <Container>\r\n            <div className=\"flex flex-col gap-6\">\r\n              {posts.map((post) => (\r\n                <Card\r\n                  key={post.$id}\r\n                  $id={post.$id}\r\n                  className=\"flex flex-row items-start p-4 shadow-lg rounded-lg\"\r\n                >\r\n                  <div className=\"flex-1 pr-4\">\r\n                    <div className=\"text-sm pb-2\">\r\n                      Post By {username[post.userId]}\r\n                    </div>\r\n\r\n                    <CardTitle className=\"text-2xl font-bold mb-2\">\r\n                      {post.title}\r\n                    </CardTitle>\r\n\r\n                    <p className=\"text-gray-800 text-base mb-2\">\r\n                      {convertReactElementToText(post.content)\r\n                        .split(\" \")\r\n                        .slice(0, 8)\r\n                        .join(\" \") + \"...\"}\r\n                    </p>\r\n                    <p className=\"text-gray-600 text-sm mb-2\">\r\n                      {new Date(post.$createdAt).toDateString()}\r\n                    </p>\r\n                  </div>\r\n                  <CardImage\r\n                    featuredImage={post.featuredImage}\r\n                    alt={post.title}\r\n                    className=\"w-32 h-24 object-cover rounded-md\"\r\n                  />\r\n                </Card>\r\n              ))}\r\n            </div>\r\n          </Container>\r\n        </div>\r\n\r\n        {/* Sidebar */}\r\n        <div className=\"bg-blue-100 max-h-50 p-4 rounded-lg shadow-md w-80 relative\">\r\n          <h2 className=\"text-lg font-bold mb-2\">Writing on Brown</h2>\r\n          <ul className=\"text-sm text-gray-800 space-y-1 mb-4\">\r\n            <li className=\"font-semibold\">New writer FAQ</li>\r\n            <li className=\"font-semibold\">Expert writing advice</li>\r\n            <li className=\"font-semibold\">Grow your readership</li>\r\n          </ul>\r\n\r\n          <Button>\r\n            <Link to={\"/Brown/post\"}> Start writing </Link>\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    ) : (<div>Redirecting...</div>)\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import React from 'react'\r\nimport { useEffect,useState } from 'react'\r\nimport PostForm from '@/components/post-form/PostForm'\r\nimport serviceObj from '@/appwrite/config'\r\nimport { useNavigate,useParams } from 'react-router-dom'\r\nimport { Container } from '@/components'\r\n\r\nconst EditPost = () => {\r\n    const [post, setPost] = useState(null)\r\n    const {slug} = useParams();\r\n    const navigate = useNavigate()\r\n    \r\n    useEffect(() => {\r\n        \r\n        if(slug){\r\n            serviceObj.getPost(slug).then((post)=>{\r\n                if(post){\r\n                    setPost(post)\r\n                    // console.log(post)\r\n                }\r\n            })\r\n        }\r\n        else{\r\n            navigate('/Brown')\r\n        }\r\n    }, [slug,navigate])\r\n    \r\n\r\n  return post ? (\r\n    <div className='my-8 mx-8 border-2 border-black' >\r\n        <Container>\r\n            \r\n            <PostForm post={post}/>\r\n        </Container>\r\n    </div>\r\n  ) : null\r\n}\r\n\r\nexport default EditPost\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\r\nimport serviceObj from \"@/appwrite/config\";\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Container } from \"@/components\";\r\nimport parse from \"html-react-parser\";\r\nimport { useSelector } from \"react-redux\";\r\nimport adminOptions from \"@/appwrite/adminOptions\";\r\n\r\nexport default function Post() {\r\n  const [post, setPost] = useState(null);\r\n  const [author, setAuthor] = useState(\"\");\r\n  const { slug } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const userData = useSelector((state) => state.userData);\r\n\r\n  // console.log(userData)\r\n  //IF CURRENT LOGGED IN USER IS THE SAME PERSON WHO AUTHORED THE ARTICLE\r\n  // THEN HE CAN EDIT OR DELETE OR ELSE NOT\r\n  const isAuthor = post && userData ? post.userId === userData.$id : false;\r\n\r\n  useEffect(() => {\r\n    if (slug) {\r\n      serviceObj.getPost(slug).then((post) => {\r\n        if (post) {\r\n          setPost(post);\r\n          // console.log(post)\r\n          adminOptions\r\n            .getUserfromUserID(post.userId)\r\n            .then((data) => data)\r\n            .then((username) => setAuthor(username.name))\r\n            .catch((error) => console.error(\"Error fetching user:\", error));\r\n        } else navigate(\"/Brown\");\r\n      });\r\n    } else navigate(\"/Brown\");\r\n  }, [slug, navigate]);\r\n\r\n  const deletePost = () => {\r\n    serviceObj.deletePost(post.$id).then((status) => {\r\n      if (status) {\r\n        serviceObj.deleteFile(post.featuredImage);\r\n        navigate(\"/Brown\");\r\n      }\r\n    });\r\n  };\r\n\r\n  /*\r\n  return post ? (\r\n    <div className=\"py-8\">\r\n      <Container>\r\n        <div className=\"w-full flex justify-center mb-4 relative border rounded-xl p-2\">\r\n          <img\r\n            src={serviceObj.getFilePreview(post.featuredImage)}\r\n            alt={post.title}\r\n            className=\"rounded-xl\"\r\n          />\r\n\r\n          {isAuthor && (\r\n            <div className=\"absolute right-6 top-6\">\r\n              <Link to={`/edit-post/${post.$id}`}>\r\n                <Button className=\"mr-3\">Edit</Button>\r\n              </Link>\r\n              <Button variant=\"destructive\" onClick={deletePost}>\r\n                Delete\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <div className=\"w-full mb-6\">\r\n          {author}\r\n        </div>\r\n        <div className=\"w-full mb-6\">\r\n          <h1 className=\"text-2xl font-bold\">{post.title}</h1>\r\n        </div>\r\n        <div className=\"browser-css\">{parse(post.content)}</div>\r\n      </Container>\r\n    </div>\r\n  ) : null;\r\n   */\r\n\r\n  return post ? (\r\n    \r\n    ((post.status == \"active\")||(isAuthor==true)) ? (\r\n      <div className=\"py-12 bg-gray-100 min-h-screen\">\r\n        <Container>\r\n          <div className=\"max-w-2xl mx-auto bg-white shadow-md rounded-xl p-6\">\r\n            <h1 className=\"text-3xl font-extrabold mb-4\">{post.title}</h1>\r\n            <div className=\"text-gray-500 \">Written By {author}</div>\r\n            <div className=\"text-gray-500 mb-4\">\r\n              {new Date(post.$createdAt).toDateString()}\r\n            </div>\r\n            <div className=\"w-full flex justify-center mb-6\">\r\n              <img\r\n                src={serviceObj.getFilePreview(post.featuredImage)}\r\n                alt={post.title}\r\n                className=\"rounded-xl w-full object-cover\"\r\n              />\r\n            </div>\r\n            <div className=\"prose prose-lg text-gray-800\">\r\n              {parse(post.content)}\r\n            </div>\r\n            {isAuthor && (\r\n              <div className=\"mt-6 flex justify-end gap-3\">\r\n                <Link to={`/Brown/edit-post/${post.$id}`}>\r\n                  <Button className=\"bg-blue-600 text-white\">Edit</Button>\r\n                </Link>\r\n                <Button variant=\"destructive\" onClick={deletePost}>\r\n                  Delete\r\n                </Button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    ) : (\r\n    \r\n      <div className=\"flex flex-col items-center justify-center p-6 bg-gradient-to-r from-yellow-100 to-yellow-50 border-l-4 border-yellow-500 rounded-lg shadow-md\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          {/* Animated Loader */}\r\n          <span className=\"w-3 h-3 bg-yellow-500 rounded-full animate-ping\"></span>\r\n          <p className=\"text-yellow-700 font-semibold text-lg\">\r\n            This post is under progress.\r\n          </p>\r\n        </div>\r\n        <p className=\"text-yellow-600 text-sm mt-2\">Please check back later.</p>\r\n      </div>\r\n    )\r\n  ) : null;\r\n}\r\n","import React from 'react'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Link } from 'react-router-dom'\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"flex flex-col justify-center items-start min-h-[83vh] bg-[#f7f4ed] text-black pl-30 max-[1024px]:pl-20 max-[768px]:pl-10 max-[409px]:pl-6 \">\r\n      <div className=\"max-w-4xl\">\r\n        <h1 className=\"flex flex-col items-start font-stix_two_test font-semibold\">\r\n          <div className=\"text-8xl max-[768px]:text-6xl max-[409px]:text-5xl max-[332px]:text-4xl\">\r\n            Human\r\n          </div>\r\n          <div className=\"text-8xl max-[768px]:text-6xl max-[409px]:text-5xl max-[332px]:text-4xl\">\r\n            stories & ideas\r\n          </div>\r\n        </h1>\r\n        <p className=\"text-xl max-[768px]:text-lg max-[409px]:text-base max-[332px]:text-sm mt-4 text-gray-700 font-roboto\">\r\n          A place to read, write, and deepen your understanding\r\n        </p>\r\n        <Link to=\"/Brown/dashboard\">\r\n        <Button className=\"mt-6 px-8 py-4 text-lg font-medium bg-black text-white rounded-full hover:bg-gray-900 transition-all max-[768px]:bg-green-500 \">\r\n          Start reading\r\n        </Button>\r\n        </Link>\r\n      </div>\r\n      \r\n\r\n      {/* Decorative Elements */}\r\n      <img\r\n        src=\"/img2.jpg\" \r\n        alt=\"Decorative Image\"\r\n        className=\"fixed right-1 top-19 max-w-[610px] max-[1355px]:hidden \"\r\n        \r\n      />\r\n\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from \"react\";\r\n\r\nconst NotFoundPage = () => {\r\n  return (\r\n    <div class=\"bg-indigo-900 relative overflow-hidden h-screen\">\r\n  <img\r\n    src=\"https://external-preview.redd.it/4MddL-315mp40uH18BgGL2-5b6NIPHcDMBSWuN11ynM.jpg?width=960&crop=smart&auto=webp&s=b98d54a43b3dac555df398588a2c791e0f3076d9\"\r\n    class=\"absolute h-full w-full object-cover\"\r\n  />\r\n  \r\n  <div class=\"inset-0 bg-black opacity-25 absolute\"></div>\r\n\r\n  <div class=\"container mx-auto px-6 md:px-12 relative z-10 flex items-center py-32 xl:py-40\">\r\n    <div class=\"w-full font-mono flex flex-col items-center relative z-10\">\r\n      <h1 class=\"font-extrabold text-5xl text-center text-white leading-tight mt-4\">\r\n        You are all alone here\r\n      </h1>\r\n      <p class=\"font-extrabold text-8xl my-44 text-white animate-bounce\">\r\n        404\r\n      </p>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n  );\r\n};\r\n\r\nexport default NotFoundPage;\r\n","import { createBrowserRouter, createRoutesFromElements, Route, RouterProvider } from 'react-router-dom'\nimport { StrictMode } from 'react'\nimport { createRoot } from 'react-dom/client'\nimport './index.css'\nimport App from './App.jsx'\n\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport Layout from './Layout'\nimport LoginPage from './app/login/page'\nimport SignUpPage from './app/sign-up/page'\nimport PostPage from './app/post-page/page'\nimport Dashboard from './app/dashboard/page'\nimport EditPost from './app/edit-post/page'\nimport Post from './app/post/page'\nimport Home from './app/home/page'\nimport { Protected } from './components'\nimport NotFoundPage from './app/not-found/page'\n\nconst router = createBrowserRouter([\n  {\n    path: '/Brown/',\n    element: <Layout/>,\n    children: [\n      {\n        path: '/Brown/',\n        element: <Home/>,\n      },\n      {\n        path: 'login',\n        element:(\n          <Protected authentication={false}>\n            <LoginPage/>\n          </Protected>\n        )\n      },\n      {\n        path: 'sign-up',\n        element: (\n          <Protected authentication={false}>\n            <SignUpPage/>\n          </Protected>\n          )\n      },\n      {\n        path: 'post',\n        element:  (\n        <Protected authentication={true}>\n          <PostPage/>\n        </Protected>)\n      },\n      {\n        path: 'dashboard',\n        element:(\n        <Protected authentication={true}> \n          <Dashboard/>\n        </Protected>\n        )\n      },\n      {\n        path: 'edit-post/:slug',\n        element: (\n        <Protected authentication={true}>\n          <EditPost/>\n        </Protected> \n        )\n      },\n      {\n        path: 'post/:slug',\n        element: <Post/>\n      },\n      {/* 404 Page*/},\n      {\n        path: '*',\n        element: <NotFoundPage/>\n      },\n    ]\n  }\n])\n\ncreateRoot(document.getElementById('root')).render(\n  <Provider store={store}>\n    <StrictMode>\n      {/* <App/> */}\n      <RouterProvider router={router} /> \n      \n    </StrictMode>\n  </Provider>\n)\n"],"names":["jsx","Fragment","jsxs","error","authLogout","ProgressPrimitive.Root","ProgressPrimitive.Indicator","useState","useEffect","forwardRef","LabelPrimitive.Root","useRef","authLogin","SelectPrimitive.Root","SelectPrimitive.Trigger","SelectPrimitive.Group","SelectPrimitive.Value","SelectPrimitive.Icon","ChevronDownIcon","SelectPrimitive.Portal","SelectPrimitive.Content","SelectPrimitive.Viewport","SelectPrimitive.Label","SelectPrimitive.Item","SelectPrimitive.ItemIndicator","CheckIcon","SelectPrimitive.ItemText","SelectPrimitive.ScrollUpButton","ChevronUpIcon","SelectPrimitive.ScrollDownButton","data","useCallback","Client","posts","renderToStaticMarkup","post","createRoot","Provider","StrictMode","RouterProvider"],"mappings":"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"}